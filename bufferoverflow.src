//buffer overflow exploit v1.3.0
//command: xa (exploit attack)
//make a buffer overflow attack on specified ip port memory adress and variable
if params.len < 4 then exit("Usage: "+program_path.split("/")[-1]+" [ip_address] [port] [mem address] [variable name]")

metaxploit = include_lib("/lib/metaxploit.so")
if not metaxploit then metaxploit = include_lib(current_path + "/metaxploit.so")

ip = params[0]
port = params[1].to_int
address = params[2]
variable = params[3]

c_red = "<color=#ff0000>"
c_green = "<color=#00ff00>"
c_blue = "<color=#0000ff>"
c_grey = "<color=#999999>"
c_reset = "</color>"

net_session = metaxploit.net_use(ip, port)
if not net_session then exit(c_red+"Error: can't connect to net session"+c_reset)
metaLib = net_session.dump_lib


result = metaLib.overflow(address, variable)

//in case of password inject vulnerability run exploit again and request user pass
if result == 0 then
	print("Password inject vulnerability found")
	pass = user_input("Password: ")
	result = metaLib.overflow(address, variable, pass)
	if result == 1 then
		exit(c_green + "Password inject successfull" + c_reset)
	else
		exit(c_red + "Password inject failed" + c_reset)
	end if
end if

if not result then exit(c_red+"No result" + c_reset)

//print("Managed exploit " + "" + result + "")

read_passwd_file = function(computer)
	passwd_file = computer.File("/etc/passwd")
	print(passwd_file.get_content)
end function


change_user_passwd = function(computer)
	username = user_input("Username: ")
	password = user_input("Password: ")
	res = computer.change_password(username, password)
	if res == 1	then
		print(c_green + "Password changed successfully" + c_reset)
	else
		print(c_red + res + c_reset)
	end if
end function


//copied from other scripts
AccessPasswdFile = function(result)
	print("Accessing /etc/passwd")
	files = result.get_files
	for file in files
		if file.name == "passwd" then
			if not file.has_permission("r") then exit(c_red + "Can't access file. Doesnt have read permissions" + c_reset)
			print(c_green + "Success! loading content..." + file.get_content + c_reset)
		end if
	end for
end function


createUserProcess = function(computer)
	user = user_input("Username: ")
	pass = user_input("Password: ")
	res = computer.create_user(user, pass)
	if res then
		print(c_green + "Success! User created " + c_reset)
	else
		print(c_red + res + c_reset)
	end if
end function


if typeof(result) == "shell" then
	print("Shell access obtained. Do you want to run terminal?")
	option = user_input("y/n: ")
	if option == "y" then
		result.start_terminal
	end if

else if typeof(result) == "file" then
	print("Accessed file " + result.path)
	while result.path != "/"
		result = result.parent
	end while
	folders = result.get_folders
	for folder in folders
		if folder.path == "/etc" then
			AccessPasswdFile(folder)
		end if
	end for
else if typeof(result) == "computer" then
	while true
		print("1. Read /etc/passwd file")
		print("2. Change user passwd")
		print("3. Create user (in testing)")
		print("0. Exit")
		option = user_input("Option: ")
		if option == "0" then exit("Exited")
		if option == "1" then read_passwd_file(result)
		if option == "2" then change_user_passwd(result)
		if option == "3" then createUserProcess(result)
	end while
end if
